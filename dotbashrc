# -*- mode: sh -*-
for f in /etc/bash_completion /usr/local/etc/bash_completion; do
    [[ -f $f ]] && . $f
done

export PS1='\[\e[32m\]\u@\h:\[\e[33m\]\w\[\e[0m\]$(__git_ps1 " (%s)")\n\$ '
export LESS="--quit-on-intr --raw-control-chars --LONG-PROMPT"

if [ "$(uname | grep -i cygwin)" != "" ] ; then
    CYGWIN=1
fi

if [ "$CYGWIN" == "1" ]; then
    export ANT_HOME=/cygdrive/c/tools/apache-ant-1.9.0
    export PATH=$ANT_HOME/bin:$PATH/cygdrive/c/tools/apache
    complete -C complete-ant-cmd.pl ant build.sh
    export JAVA_HOME=/cygdrive/c/Program\ Files/Java/jdk1.7.0_17
    export PATH=$JAVA_HOME/bin:$PATH
    export PATH=/cygdrive/c/tools/apache-maven-3.0.5/bin:$PATH
    export EDITOR=st.sh
else
    export EDITOR=emacsclient
    export ANT_HOME=/usr/local/opt/ant
    export MAVEN_HOME=/usr/local/opt/maven
    export GRADLE_HOME=/usr/local/opt/gradle
    export ANDROID_HOME=/usr/local/opt/android-sdk
    export ANDROID_NDK_HOME=/usr/local/opt/android-ndk
    export GOPATH=~/go
    export PATH=~/bin:~/.pyenv/bin:/usr/local/sbin:/usr/local/bin:$PATH:$GOPATH/bin
fi


log_bash_persistent_history()
{
    [[
        $(history 1) =~ ^\ *[0-9]+\ +([0-9.]+\ [0-9:]+)\ +(.*)$
    ]]
    local date_part="${BASH_REMATCH[1]}"
    local command_part="${BASH_REMATCH[2]}"
    if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ]
    then
        echo $date_part "|" "$command_part" >> ~/.persistent_history
        export PERSISTENT_HISTORY_LAST="$command_part"
    fi
}

set_window_title()
{
    case $TERM in
        *xterm*)
            echo -ne "\033]1;\007"
            echo -ne "\033]2;\007"
            echo -ne "\033]0;$*\007"
            ;;
        *)
            return
            ;;
    esac
}

run_on_prompt_command()
{
    log_bash_persistent_history
    set_window_title $(echo $PWD | sed s:^$HOME:~:)
}

listening_on_port()
{
    # OSX specific
    lsof -i -n -P | grep TCP | grep LISTEN | grep ":$1"
}

aws_use_credentials()
{
    if [[ -f ~/.aws/credentials.$1 ]] ; then
        rm -f ~/.aws/credentials
        ln -s ~/.aws/credentials.$1 ~/.aws/credentials
    else
        echo "No credentials found for $1 (at ~/.aws/credentials.$1)"
    fi
}

aws_credentials_in_use()
{
    readlink ~/.aws/credentials|awk -F'.' '{print $NF;}'
}

export HISTTIMEFORMAT="%d.%m.%Y %T  "
PROMPT_COMMAND="run_on_prompt_command;$PROMPT_COMMAND"
PROMPT_DIRTRIM=3
alias phgrep='cat ~/.persistent_history|grep --color'

shopt -s nocaseglob

alias ll='ls -l'
if [[ $(uname) == "Darwin" ]]; then
    alias ls='ls -G'
    alias myip='ifconfig |grep "inet " | grep -v 127.0.0.1 | awk '"'"'{print $2}'"'"

    function anybar { echo -n $1 | nc -4u -w0 localhost ${2:-1738}; }
    export JAVA_HOME=$(/usr/libexec/java_home)

    [ -f ~/.gpg-agent-info ] && source ~/.gpg-agent-info
    if [ -S "${GPG_AGENT_INFO%%:*}" ]; then
        export GPG_AGENT_INFO
    else
        if [[ -z $(ps x|grep gpg-agent|grep daemon) ]] \
               && [[ -x $(which gpg-agent) ]]; then
            eval $( gpg-agent --daemon --write-env-file ~/.gpg-agent-info )
        fi
    fi

else
    alias ls='ls --color=tty'
fi

# eval "$(register-python-argcomplete conda)"

eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

if [ -e /usr/local/bin/aws_bash_completer ] ; then
    source /usr/local/bin/aws_bash_completer
fi

alias showpath='echo $PATH|sed "s/\:/\\n/g"'
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias docker-compose-stop="docker-compose stop; docker-compose rm -f"
alias docker-dev-env='eval $(docker-machine env dev)'
alias docker-stop-all="docker ps -a -q | xargs docker stop"
alias docker-rm-dangling-images='docker rmi -f $(docker images -qf dangling=true)'
alias docker-rm-dangling-volumes='docker volume rm $(docker volume ls -qf dangling=true)'
alias git-github-ledger="trezor-agent -v git@github.com -- git"
alias git-bsft-ledger="trezor-agent -v git@git.broadsoft.com -- git"
alias calc='bc -l <<< '
alias rot13="tr '[A-Za-z]' '[N-ZA-Mn-za-m]'"
alias e=emacsclient

PATH="~/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="~/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="~/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"~/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=~/perl5"; export PERL_MM_OPT;
