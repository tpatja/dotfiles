# -*- mode: sh -*-
for f in /etc/bash_completion /usr/local/etc/bash_completion; do
    [[ -f $f ]] && . $f
done

export PS1='\[\e[32m\]\u@\h:\[\e[33m\]\w\[\e[0m\]$(__git_ps1 " (%s)")\n\$ '
export LESS="--quit-on-intr --raw-control-chars --LONG-PROMPT"
export EDITOR="emacsclient -n"
export GIT_EDITOR="emacsclient"

if [[ $(uname) == "Darwin" ]]; then
    export ANT_HOME=/usr/local/opt/ant
    export MAVEN_HOME=/usr/local/opt/maven
    export GRADLE_HOME=/usr/local/opt/gradle
    export ANDROID_HOME=/usr/local/opt/android-sdk
    export ANDROID_NDK_HOME=/usr/local/opt/android-ndk
elif [[ $(uname) == "Linux" ]]; then
    export ANDROID_HOME=~/Android/Sdk
    export PATH=$PATH:$ANDROID_HOME/platform-tools
fi

export GOPATH=~/go
export FLYCTL_INSTALL=~/.fly
export PATH=$PATH:~/bin:~/.local/bin:~/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/local/go/bin:$GOPATH/bin:$FLYCTL_INSTALL/bin


log_bash_persistent_history() {
    [[
        $(history 1) =~ ^\ *[0-9]+\ +([0-9.]+\ [0-9:]+)\ +(.*)$
    ]]
    local date_part="${BASH_REMATCH[1]}"
    local command_part="${BASH_REMATCH[2]}"
    if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ]
    then
        echo $date_part "|" "$command_part" >> ~/.persistent_history
        export PERSISTENT_HISTORY_LAST="$command_part"
    fi
}

set_window_title() {
    case $TERM in
        *xterm*)
            echo -ne "\033]1;\007"
            echo -ne "\033]2;\007"
            echo -ne "\033]0;$*\007"
            ;;
        *)
            return
            ;;
    esac
}

add_venv_info () {
    if [ -z "$VIRTUAL_ENV_DISABLE_PROMPT" ] ; then
        if [ "$VIRTUAL_ENV" != "" ]; then
            PS1="(`basename \"$VIRTUAL_ENV\"`) $PS1"
        fi
    fi
}

__prompt_command() {
    local EXIT="$?"
    local RED='\[\e[0;31m\]'
    local GREEN='\[\e[0;32m\]'
    local YELLOW='\[\e[33m\]'
    local NC='\[\e[0m\]'
    local PS1_DEFAULT="${GREEN}\u@\h:${YELLOW}\w${NC}"'$(__git_ps1 " (%s)")\n\$ '
    log_bash_persistent_history
    set_window_title $(echo $PWD | sed s:^$HOME:~:)
    if [ $EXIT != 0 ] ; then
        PS1="${RED}exit=${EXIT}${NC} ${PS1_DEFAULT}"
    else
        PS1=$PS1_DEFAULT
    fi
    add_venv_info
}

__emacsclient_linux() {
    # this raises the emacs window
    emacsclient -n $1
    WID=$(xdotool search --desktop 0 --name emacs)
    xdotool windowactivate $WID
}


listening_on_port() {
    # OSX specific
    lsof -i -n -P | grep TCP | grep LISTEN | grep ":$1"
}

aws_use_account() {
    if [[ -f ~/.aws/credentials.$1 ]] ; then
        rm -f ~/.aws/credentials
        ln -s ~/.aws/credentials.$1 ~/.aws/credentials
    else
        echo "No credentials found for $1 (at ~/.aws/credentials.$1)"
    fi
    if [[ -f ~/.aws/config.$1 ]] ; then
        rm -f ~/.aws/config
        ln -s ~/.aws/config.$1 ~/.aws/config
    else
        echo "No config found for $1 (at ~/.aws/config.$1)"
    fi
}

aws_account_in_use() {
    echo "config="$(readlink ~/.aws/config|awk -F'.' '{print $NF;}')
    echo "credentials="$(readlink ~/.aws/credentials|awk -F'.' '{print $NF;}')
}

epoch-to-human-readable() {
    date -d "@$1"
}

export HISTTIMEFORMAT="%d.%m.%Y %T  "
PROMPT_COMMAND="__prompt_command"
PROMPT_DIRTRIM=3
alias phgrep='cat ~/.persistent_history|grep --color'

shopt -s nocaseglob

alias ll='ls -l'
if [[ $(uname) == "Darwin" ]]; then
    alias ls='ls -G'
    alias myip='ifconfig |grep "inet " | grep -v 127.0.0.1 | awk '"'"'{print $2}'"'"

    function anybar { echo -n $1 | nc -4u -w0 localhost ${2:-1738}; }
    export JAVA_HOME=$(/usr/libexec/java_home)

    [ -f ~/.gpg-agent-info ] && source ~/.gpg-agent-info
    if [ -S "${GPG_AGENT_INFO%%:*}" ]; then
        export GPG_AGENT_INFO
    else
        if [[ -z $(ps x|grep gpg-agent|grep daemon) ]] \
               && [[ -x $(which gpg-agent) ]]; then
            eval $( gpg-agent --daemon --write-env-file ~/.gpg-agent-info )
        fi
    fi

else
    alias ls='ls --color=tty'
fi

# eval "$(register-python-argcomplete conda)"

eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

if [ -e /usr/local/bin/aws_bash_completer ] ; then
    source /usr/local/bin/aws_bash_completer
fi

alias showpath='echo $PATH|sed "s/\:/\\n/g"'
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi
alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias docker-compose-stop="docker-compose stop; docker-compose rm -f"
alias docker-dev-env='eval $(docker-machine env dev)'
alias docker-stop-all="docker ps -a -q | xargs docker stop"
alias docker-rm-dangling-images='docker rmi -f $(docker images -qf dangling=true)'
alias docker-rm-dangling-volumes='docker volume rm $(docker volume ls -qf dangling=true)'
alias git-github-ledger="trezor-agent -v git@github.com -- git"
alias git-bsft-ledger="trezor-agent -v git@git.broadsoft.com -- git"
alias calc='bc -l <<< '
alias rot13="tr '[A-Za-z]' '[N-ZA-Mn-za-m]'"
alias e="emacsclient -n"
alias genpw="pwgen -syr '\`' 16 1"

if [ $OSTYPE == "linux-gnu" ] ; then
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
    unalias e
    alias e='__emacsclient_linux'
fi

PATH="~/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="~/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="~/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"~/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=~/perl5"; export PERL_MM_OPT;


if [[ $(uname) == "Darwin" ]]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "/usr/local/opt/nvm/nvm*.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
    [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"
else
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
fi
